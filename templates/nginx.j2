# Deployments for the nginx service
# It uses a self-signed certificate. Put a correct one. 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: oscar
data:
  default.conf: |
      server {
            listen         80;
            server_name    _;
            return         301 https://$host$request_uri;
      }
      server {
        listen        443 ssl;
        access_log   /var/log/nginx/access.log  combined;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate      /etc/nginx/server.crt;
        ssl_certificate_key  /etc/nginx/server.key;
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 1000m;
        # To disable buffering
        proxy_buffering off;
        location /   {
          proxy_pass              https://oscar-ui.oscar:3000/;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-Proto https;
          proxy_set_header        Host $http_host;
        }
        location /oscar/   {
          proxy_pass              http://oscar-manager.oscar:8080/;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-Proto https;
          proxy_set_header        Host $http_host;
          proxy_set_header        X-Forwarded-Prefix /oscar;
        }
        location /minio/ {
          proxy_pass              http://minio-service.minio:9000/minio/;
          proxy_set_header Host $host;
        }
        location /openfaas/ {
          proxy_pass              http://gateway-external.openfaas:8080/;
          proxy_set_header Host $host;
        }
        location /ui/ {
          proxy_pass              http://gateway-external.openfaas:8080/ui/;
          proxy_set_header Host $host;
        }
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  nginx
  namespace: oscar
spec:
  selector:
    matchLabels:
      name: nginx
  replicas: 1
  template:
    metadata:
      labels:
        name:  nginx
    spec:
      containers:
        - name: nginx
          image:  nginx
          ports:
          - containerPort: 443
            name: https
          - containerPort: 80
            name: http
          volumeMounts:
          - name: nginx
            mountPath: /etc/nginx/conf.d/default.conf 
            subPath: default.conf
          - name: tls
            mountPath: /etc/nginx/server.key
            subPath: tls.key
          - name: tls
            mountPath: /etc/nginx/server.crt
            subPath: tls.crt
          livenessProbe:
            httpGet:
              path: /
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 20
{% if master_deploy %}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ''
{% endif %}
      volumes:
        - name: nginx
          configMap:
            name: nginx
        - name: tls
          secret:
            secretName: nginx-tls-secret

# Service for the nginx service
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: oscar
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    nodePort: {{ nginx_http_nodeport }}
  - name: https
    port: 443
    nodePort: {{ nginx_https_nodeport }}
  selector:
    name: nginx