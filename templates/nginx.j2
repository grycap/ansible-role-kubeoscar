# Deployments for the nginx service
# It uses a self-signed certificate. Put a correct one. 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: oscar
data:
  server.crt: |
    -----BEGIN CERTIFICATE-----
    MIIE5DCCAsygAwIBAgIDATklMA0GCSqGSIb3DQEBCwUAMCExHzAdBgNVBAMMFmt1
    YmVzZXJ2ZXIubG9jYWxkb21haW4wHhcNMTgxMTA5MDg0NjM3WhcNMjgxMTA2MDg0
    NjM3WjAhMR8wHQYDVQQDDBZrdWJlc2VydmVyLmxvY2FsZG9tYWluMIICIjANBgkq
    hkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAy+speGAUBvWTv62buCDa/jUXjxgzuHG+
    sMubliXbPUohteJ7np49YG0vtfUu8maXWTYhLWP5as3lg4L7za1K7JFao46XJ0dg
    DyK4bcSFuFaEPN1t4LL55NAUz+0xiaTL5A8bZhlwdJkRIbsy7TWUqQmFAckREPQF
    uM8faYP7pBK5ATuWICAVASHrdUAcCxmkTrgKTVG3TaBwi5/2K6L/8H5NO0fiX/W2
    jFJTFk1dgimdRGjHF2XdDHzP8+azHkcUNd9naNXDFjS9flCQkl5YJXDWJ7VvRwGB
    RUZCz2P/yJfV+FJ7Wd3JNm6xgSfy3Wrj1qzlTZIKAQzClxi3Fb14gaZV6T5QF20O
    GmXRNo4DOTLAjki6e/xyuYBD/5pBJONuQcGUpvtxYdQ8RWAbBnqjO9tvNXzSkoU9
    3DxpMKP8UQPWJRa6I7tfr240aI8pMny3N8JInKA3470kbtC79jBBhQkBcobYSkI9
    EPDp1KfoOv9NYQkcXOW8uJheauVA3xyCA2aBv+qi0xFTzer6BCPmMj/3CJ24xRPj
    vVkcsh2nvK4eE4a5XYqE2ETkjczAt/GtJdYZ35SmNOectntrBvOSVUFIy8xnLAws
    wxA4YTIECFMoGfpHZS0Dg4MJXupWG88Bik3kv0s/CtQJTzSWRAJiFUPu3sqZ+UxV
    k2SOEbW5AecCAwEAAaMlMCMwIQYDVR0RBBowGIIWa3ViZXNlcnZlci5sb2NhbGRv
    bWFpbjANBgkqhkiG9w0BAQsFAAOCAgEATOH4tr5PmJ2Gu4FnxuTAbYHhrFnF5PcI
    4jDNoNYoZcW27nk9Y3IB6kT/p5Ad64qQo8w82XzyY+Y/MBRh2MxeND2i6ilUq3iD
    BfVwnkPrR3JlfdTbkj1ea/gNdTzPlBwVLfMCrFk7fYLGYu64ei+B4NE8Z6ZBqfHh
    F3z0WQI8iYnahgiYeCT+lwh7j/Gwu+nC8Kngk6f51oVOMGNw6l/zi1kaa9f+p+5Z
    P8/RKJ9fbwYiqeHF/E84qm1LaXtamGP86IJokVidLnigZexX18qkXeT7RAt0rQdB
    iPUo3pPPJXB1b7m07qzRxKKs7CTLS+xbhgmmjwfoReCurgMHj6gDLvKWzAPlRG98
    6plQ6UhjBpi7S1EFCaLAxt5//q2VPwX9PBQQyQKjW905+YY0nlZTUdqh0q3tQYf4
    ddc15jqGN6J8XOz0OAY629p0vHrusignqhwMZ7PMrIVGCy7hTibtLVDl3orbmA3H
    2EDCb5z3XfhaDt/tI/Tkt0BipWnDM87JwKu+YLJP5yGdXKaS4IbB5b4MmYEDFZNZ
    Orw4Aruz9N7q3uG3zH0CMZjfjqDK14EcV0b2+8MOmvVQ2xT5ZN4yCCxroyFDQEEH
    7a0ESlMmEZSHyyQgz1ZXS606Y76WEsQ7hLSVE5raqjF2gNt36RUR5vRG0/P0A4lC
    Ai4IydPHQ3A=
    -----END CERTIFICATE-----
  server.key: |
    -----BEGIN PRIVATE KEY-----
    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
    RL/36SxGWtbz0G5Mrmq8zl3I8zZaJQ==
    -----END PRIVATE KEY-----
  default.conf: |
      server {
            listen         80;
            return         301 https://$server_name$request_uri;
      }
      server {
        listen        443 ssl;
        access_log   /var/log/nginx/access.log  combined;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate      /etc/nginx/server.crt;
        ssl_certificate_key  /etc/nginx/server.key;
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 1000m;
        # To disable buffering
        proxy_buffering off;
        location /   {
          proxy_pass              https://oscar-ui.oscar:3000/;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-Proto https;
          proxy_set_header        Host $http_host;
        }
        location /oscar/   {
          proxy_pass              http://oscar-manager.oscar:8080/;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-Proto https;
          proxy_set_header        Host $http_host;
          proxy_set_header        X-Forwarded-Prefix /oscar;
        }
        location /minioui/ {
          proxy_pass              http://minio-service.minio:9000/;
          proxy_set_header Host $host;
        }
        location /minio/ {
          proxy_pass              http://minio-service.minio:9000/minio/;
          proxy_set_header Host $host;
        }
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  nginx
  namespace: oscar
spec:
  selector:
    matchLabels:
      name: nginx
  replicas: 1
  template:
    metadata:
      labels:
        name:  nginx
    spec:
      containers:
        - name: nginx
          image:  nginx
          ports:
          - containerPort: 443
            name: https
          - containerPort: 80
            name: http
          volumeMounts:
           - name: nginx
             mountPath: /etc/nginx/conf.d/default.conf 
             subPath: default.conf
           - name: nginx
             mountPath: /etc/nginx/server.key
             subPath: server.key
           - name: nginx
             mountPath: /etc/nginx/server.crt
             subPath: server.crt
          livenessProbe:
            httpGet:
              path: /
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 20
{% if master_deploy %}
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ''
{% endif %}
      volumes:
        - name: nginx
          configMap:
            name: nginx

# Service for the nginx service
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: oscar
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    nodePort: {{ nginx_http_nodeport }}
  - name: https
    port: 443
    nodePort: {{ nginx_https_nodeport }}
  selector:
    name: nginx