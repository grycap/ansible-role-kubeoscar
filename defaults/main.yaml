# OSCAR version to install (can be a release tag or "latest")
oscar_version: ""
# Namespace to deploy OSCAR services
oscar_services_namespace: "oscar-svc"
# OSCAR username for basic auth
oscar_user: "oscar"
# OSCAR password for basic auth
oscar_pass: "oscar123"
# Service type for OSCAR
oscar_service_type: "ClusterIP"
# NodePort used if the service type is NodePort
oscar_nodeport: 30301
# Expose by a Kubernetes Ingress
create_ingress: false
# DNS hostname for the ingress
dns_host: "''"
# Cert-manager issuer to automatically assign TLS certificates
cert_manager_issuer: "''"
# Serverless Backend (can be "openfaas" or "''")
serverless_backend: "''"
# Namespace where the OpenFaaS gateway is deployed
openfaas_namespace: "openfaas"
# Service port where the OpenFaaS gateway is exposed (ClusterIP)
openfaas_port: 8080
# Enable OF Scaler
openfaas_scaler_enable: false
# Time interval to check if there are idle OpenFaaS functions
openfaas_scaler_interval: "2m"
# Duration with no requests to consider that an OpenFaaS function is idle
openfaas_scaler_inactivity_duration: "10m"
# MinIO endpoint
minio_endpoint: "https://minio-service.minio:9000"
# Verify MinIO's TLS certificates for HTTPS connections
minio_tls_verify: true
# Region of the MinIO server
minio_region: "us-east-1"
# Access key of the MinIO server
minio_access_key: "minio"
# Secret key of the MinIO server
minio_secret_key: "minio123"
# FaaS Supervisor version to use in the OSCAR's services
supervisor_version: "1.5.2"
# Deploy in Kubernetes Master node
master_deploy: false
# Default kubeconfig path
kubeconfig_path: '/etc/kubernetes/admin.conf'
# Version of oscar-cli to be installed and configured
oscar_cli_version: "v1.4.0"
# Enable Resource Manager
resource_manager_enable: true
# Time interval (in seconds) to update the available resources in the cluster
resource_manager_interval: 15
# Enable ReScheduler
rescheduler_enable: true
# Time interval (in seconds) to check if pending jobs
rescheduler_interval: 15
# Time (in seconds) that a job (with replicas) can be queued before delegating it
rescheduler_threshold: 30
# Parameter to enable OpenID Connect support
oidc_enable: false
# OpenID Connect issuer as returned in the "iss" field of the JWT payload
oidc_issuer: "https://aai.egi.eu/auth/realms/egi"
# OpenID Connect Subject (user identifier)
oidc_subject: ""
# OpenID group list to grant access in the cluster. Groups defined in the "eduperson_entitlement" OIDC scope, as described in https://docs.egi.eu/providers/check-in/sp/#10-groups
oidc_groups: []

